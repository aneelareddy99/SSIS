CREATE DATABASE SOURCECDCDATABASE11
GO
USE SOURCECDCDATABASE11
GO

-- STEP 1: HOW TO ENABLE CDC AT DATABASE LEVEL?
EXEC SP_CDC_ENABLE_DB	-- change data capture. A mechanism to audit DML operations on a table


-- STEP 2: RIGHT CLICK SQL SERVER AGENT >> START


-- STEP 3: HOW TO ENABLE CDC AT TABLE LEVEL?
-- THIS STEPS CREATES TWO JOBS : "Capture JOB" & "Cleanup JOB"
-- JOBS ARE SERVER LEVEL OBJECTS (STORED IN MSDB) USED TO PERFORM AUTOMATED OPERATIONS. 

-- THIS STEP ALSO RESULTS IN ONE ADDITIONAL "CT" TABLE. "CT = CHANGE TRACKING" TABLE

-- CAPTURE JOB RUNS FORVER. USED TO PEFORM DML AUDITS.
-- CLEANUP JOB RUNS EVERY 24 HOURS (CAN BE CUSTOMIZED). USED TO CLEAN THE HISTORY FROM CT TABLE.


CREATE TABLE OLTP_PRODUCT_TABLE
(
ProductID INT PRIMARY KEY,
ProductName NVARCHAR(100),
[CALENDAR YEAR 1] FLOAT,
[CALENDAR YEAR 2] FLOAT,
[CALENDAR YEAR 3] FLOAT,
[CALENDAR YEAR 4] FLOAT
)

EXEC SP_CDC_ENABLE_TABLE
 @SOURCE_NAME = 'OLTP_PRODUCT_TABLE', @SOURCE_SCHEMA = 'DBO',
 @ROLE_NAME = NULL, @SUPPORTS_NET_CHANGES = 1 

 
 -- TO TEST THE CT (CHANGE TRACKING) TABLE?
 -- FORMAT:		cdc.SOURCETABLESCHEMA_SOURCETABLENAME_CT
 SELECT * FROM CDC.dbo_OLTP_PRODUCT_TABLE_CT

 INSERT INTO OLTP_PRODUCT_TABLE VALUES(1, 'CHAINS',1,1,1,1)
 INSERT INTO OLTP_PRODUCT_TABLE VALUES(2, 'CAPS',2,2,2,2)

 SELECT * FROM OLTP_PRODUCT_TABLE

 SELECT * FROM  CDC.DBO_OLTP_PRODUCT_TABLE_CT    -- ENSURE YOU SEE 2 ROWS

 /*
 __$OPERATION	#2: INSERT
				#1: DELETE
				#3: VALUE BEFORE UPDATE
				#4: VALUE AFTER UPDATE				*/


-- DEFINE DWH TABLE TO STORE INCREMENTAL LOADS
-- LAUNCH SSDT >> DEFINE CDC INITIAL PACKAGE
-- EXECUTE, TEST.

-- DEFINE CDC INCREMENTAL PACKAGE

-- VERIFY THE STATE TABLE
SELECT * FROM [dbo].[cdc_states]


 INSERT INTO OLTP_PRODUCT_TABLE VALUES(3, 'CHAINS',11,11,11,11)
 INSERT INTO OLTP_PRODUCT_TABLE VALUES(4, 'CAPS',12,12,12,12)
 
 UPDATE OLTP_PRODUCT_TABLE
 SET [CALENDAR YEAR 1] = 1000


 -- EXECUTE INCREMENTAL CHANGES  :: OLD ROW UPDATES + NEW ROW INSERTS



 select * from [dbo].[cdc_states]

 DROP TABLE [DBO].[CDC_STATES]




